print('''
网络编程
网络通信是在两台计算机上的两个进程之间的通信。

一、TCP/IP简介
计算机为了联网，就必须规定网络协议。早期的计算机网络，都是各厂商自己规定一套
协议，IBM, Apple, Microsoft都有各自的网络协议，互不兼容，这就好比一群人有的说
英语，有的说中文。
为了把全世界的所有不同类型的计算机都连接起来，就必须规定一套全球通用的协议，为
了互联网这个目标，互联网协议族(Internet Protocol Suite)就是通用协议标准。
Internet是有inter和net两个单词组合起来的，原意就是连接网络的网络，有了Internet
任何私有网络，只有支持这个协议，就可以连入互联网。
互联网协议包含了上百种协议标准，最重要的是TCP和IP协议。
通信的时候，双方必须知道对方的标识，好比发邮件必须知道对方的邮件地址。互联网上
每个计算机的唯一标识就是IP地址。如果一台计算机同时接入到两个或更多的网络，比如
路由器，它就会有两个或多个IP地址，所以，IP地址对应的实际上是计算机的网络接口，
通常是网卡。
IP协议负责把数据从一台计算机通过网络发送到另一台计算机。数据被分割成一小块一小
块，然后通过IP包发送出去。由于互联网链路复杂，两台计算机之间经常有多条线路，因
此，路由器就负责决定如何把一个IP包转发出去。IP包的特点是按块发送，途经多个路由
但不保证能到达，也不保证按顺序到达。
IP地址实际上是一个32位整数(称为IPv4),以字符串表示的IP地址如192.168.0.1实际上是
把32位整数按8位分组后的数字表示，目的是便于阅读。
IPv6地址实际上是一个128位整数，它是目前使用的IPv4的升级版，以字符串表示类似于
2000:0db8:85a3:0042:1000:8A2E:0370:7334。
TCP协议则是建立在IP协议之上的。TCP协议负责两台计算机之间建立可靠连接，保证数据
包按顺序到达。TCP协议会建立握手连接，然后对每个IP包编号，确保对方按顺序收到，
如果包丢掉了，就自动重发。
许多常用的更高级的协议都是建立在TCP协议基础上，比如用于浏览器的HTTP协议，发送
邮件的SMTP协议等
一个TCP报文除了包含要传输的数据外，还包含源IP地址和目标IP地址，源端口目标端口
在两台计算机通信时，只发IP地址是不够的，因为同一台计算机上跑着多个网络程序。
一个TCP报文来二楼之后，到底是交给浏览器还是QQ，就需要端口号开区分。每个网络程
序都向操作系统申请唯一的端口号，这样，两个进程在两台计算机之间建立网络连接就
需要各自的IP地址和各自的端口号。
一个进程也可能同时与多个计算机建立连接，因此它会申请很多端口。

二、TCP编程
Socket是网络编程的一个抽象概念，通常我们用一个Socket表示“打开了一个网络连接”
而打开一个Socket需要知道目标计算机的IP地址和端口号，再指定协议类型即可。
01. 客户端
大多数连接都是可靠的TCP连接。创建TCP连接时，主动发起连接的叫客户端，被动响应
连接的叫服务器。
# 导入socket库:
import socket

# 创建一个socket:
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
# 建立连接:
s.connect(('www.sina.com.cn', 80))
s.send(b'GET / HTTP/1.1\r\nHost: www.sina.com.cn\r\nConnection: close\r\n\r\n')
# 接收数据:
buffer = []
while True:
    # 每次最多接收1k字节:
    d = s.recv(1024)
    if d:
        buffer.append(d)
    else:
        break
data = b''.join(buffer)
print(data)

header, html = data.split(b'\r\n\r\n', 1)
print(header.decode('utf-8'))
# 把接收的数据写入文件:
with open('sina.html', 'wb') as f:
    f.write(html)
    
# 关闭连接:
s.close()

创建Socket时，AF_INET指定使用IPv4协议，如果要使用IPv6，就指定为AF_INET6. SOCK)_
STREAM指定使用面向流的TCP协议。这样，一个Socket对象就创建成功，还没建立连接。
作为服务器，提供什么样的服务，端口号必须固定下来。80是Web服务，25是SMTP, 21是FTP
端口号小于1024的是Internet标准的服务端口，端口大于1024的，可任意使用。
TCP连接创建的是双向通道，双方都可以同时给对方发数据。但是谁先发谁后发，怎么协调
要根据具体的协议来决定。例如，HTTP协议规定客户端必须先发请求给服务器，服务器收到
后才发数据给客户端。
发送的文本格式必须符合HTTP标准，如果给格式没有问题，就可以接收数据了。
接收数据时，调用recv(max)方法，一次最多接收指定的字节数，因此，在一个while循环中
反复接收，直到recv()返回空数据，表示接收完毕，退出循环。
当我们接收完数据后，调用close()方法关闭Socket，这样，一次完整的网络通信就结束了。

02. 服务器
和客户端相比，服务器编程要复杂一些。
服务器进程首先要绑定一个端口并监听来自其他客户端的连接。如果某个客户端连接过来
了，服务器就与该客户端建立Socket连接，随后的通信就靠这个Socket连接了。所以，服
务器会打开固定端口监听

三、UDP编程
UDP是面向无连接的协议。

四、电子邮件
Email的历史比Web还要久远。

五、SMTP发送邮件
简单邮件传输协议

六、POP3接收邮件
邮局协议接收邮件

七、访问数据库
01. 使用SQLLite
02. 使用MySQL
03. 使用SQLAlchemy

八、Web开发



''')

