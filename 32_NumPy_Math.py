import numpy as np

print('1.算术运算')
print()
print('1)加add() 减subtract() 乘multiply() 除divide()')
a = np.arange(9,dtype=np.float_).reshape(3,3)
print('第一个数组：')
print(a)
print('第二个数组：')
b = np.array([10,10,10])
print(b)
print()
print('两个数组相加np.add():')
print(np.add(a,b))
print('两个数组相减np.subtract():')
print(np.subtract(a,b))
print('两个数组相乘np.multiply():')
print(np.multiply(a,b))
print('两个数组相除np.divide():')
print(np.divide(a,b))
print()

print('2)numpy.reciprocal()返回倒数')
a = np.array([0.25,1.33,1,100])
print('我们的数组是：')
print(a)
print('调用reciprocal函数：')
print(np.reciprocal(a))
print()

print('3)numpy.power()幂运算')
a = np.array([10,100,1000])
print('我们的数组是：')
print(a)
print('调用power函数：')
print(np.power(a,2))
b = np.array([1,2,3])
print('第二个数组：')
print(b)
print('再次调用power函数np.power(a,b)：')
print(np.power(a,b))
print()      

print('4)numpy.mod()取余数')
a = np.array([10,20,30])
b = np.array([3,5,7])
print('第一个数组：')
print(a)
print('第二个数组：')
print(b)
print('调用mod函数np.mod(a,b)：')
print(np.mod(a,b))
print('调用remainder函数np.remainder(a,b)：')
print(np.remainder(a,b))
print()

print('5)统计函数')
a = np.array([[3,7,5],[8,4,3],[2,4,9]])
print('我们的数组是：')
print(a)
print('在1轴上调用amin(a,1)函数：')
print(np.amin(a,1))
print('在0轴上调用amin(a,0)函数：')
print(np.amin(a,0))
print('在1轴上调用amax(a,1)函数：')
print(np.amax(a,1))
print('在0轴上调用amax(a,axis=0)函数：')
print(np.amax(a,axis=0))
print()
print('调用ptp函数：')
print(np.ptp(a))
print('沿1轴调用ptp函数：')
print(np.ptp(a,axis=1))
print('沿0轴调用ptp函数：')
print(np.ptp(a,axis=0))
print()

print('百分位数标准差percentile')
a = np.array([[10,7,4],[3,2,1]])
print('我们的数组是：')
print(a)
print('调用percentile()函数：')
print('np.percentile(a,50)50%的分位数，就是a里排序之后的中位数')
print(np.percentile(a,50))
print('np.percentile(a,50,axis=0)在纵列上求')
print(np.percentile(a,50,axis=0))
print('np.percentile(a,50,axis=1)在横行上求')
print(np.percentile(a,50,axis=1))
print('np.percentile(a,50,axis=1,keepdims=True)保持维度不变')
print(np.percentile(a,50,axis=1,keepdims=True))
print()

print('numpy.median() 函数用于计算数组 a 中元素的中位数（中值）')
a = np.array([[30,65,70],[80,95,10],[50,90,60]])
print('我们的数组是：')
print(a)
print('调用median(a)函数：')
print(np.median(a))
print('沿轴0调用median(a,axis=0)函数：')
print(np.median(a,axis=0))
print('沿轴1调用median(a,axis=1)函数：')
print(np.median(a,axis=1))
print()

print('numpy.mean() 函数返回数组中元素的算术平均值')
a = np.array([[1,2,3],[3,4,5],[4,5,6]])
print('我们的数组是：')
print(a)
print('调用mean()函数：')
print(np.mean(a))
print('沿轴0调用mean(a,axis=0)函数：')
print(np.mean(a,axis=0))
print('沿轴1调用mean(a,axis=1)函数：')
print(np.mean(a,axis=1))
print()

print('numpy.average()计算数组中元素的加权平均值')
a = np.array([1,2,3,4])
print('我们的数组是：')
print(a)
print('调用average函数（不指定权重时相当于mean）：')
print(np.average(a))
print('再次调用average(a,weights=wts)wts是权重数组')
wts = np.array([4,3,2,1])
print(np.average(a,weights=wts))
print('如果returned参数设为True,则返回权重的和')
print(np.average(a,weights=wts,returned=True))
print()

print('在多维数组中可以指定用于计算的轴')
a = np.arange(6).reshape(3,2)
print('我们的数组是：')
print(a)
print('执行np.average(a,axis=1,weights=wts)后')
wts = np.array([3,5])
print(np.average(a,axis=1,weights=wts))
print('执行np.average(a,axis=1,weights=wts,returned=True)后')
print(np.average(a,axis=1,weights=wts,returned=True))
print()

print('numpy.std()标准差是一组数据平均值分散程度的一种度量')
print('标准差是方差的算术平方根')
print('标准差的公式如下：')
print('std = sqrt(mean(x - x.mean())**2))')
print('执行np.std([1,2,3,4])的结果是：')
print(np.std([1,2,3,4]))
print()

print('numpy.var()方差是每个样本值与全体样本值的平均数之差的平方的平均数')
print('执行np.var([1,2,3,4])的结果是：')
print(np.var([1,2,3,4]))
             



